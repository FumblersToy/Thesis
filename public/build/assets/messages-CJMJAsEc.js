document.addEventListener("DOMContentLoaded",function(){const o=document.querySelector('meta[name="csrf-token"]').getAttribute("content"),h=document.getElementById("conversationsList"),C=document.getElementById("chatHeader"),$=document.getElementById("messagesArea"),l=document.getElementById("messagesContainer"),k=document.getElementById("messageInput"),m=document.getElementById("messageText"),S=document.getElementById("sendMessageBtn"),j=document.getElementById("emptyState"),_=document.getElementById("typingIndicator"),K=document.getElementById("typingText"),p=document.getElementById("searchUsers"),c=document.getElementById("searchResults"),B=document.getElementById("newMessageBtn"),i=document.getElementById("newMessageModal"),w=document.getElementById("newMessageSearch"),v=document.getElementById("newMessageResults"),A=document.getElementById("closeNewMessageModal"),I=document.getElementById("closeChatBtn");let a=null,y=[],u=[],x=null;E(),X();const N=new URLSearchParams(window.location.search).get("user");N&&setTimeout(async()=>{await g(N);const e=window.location.pathname;window.history.replaceState({},document.title,e)},1500);function X(){S&&S.addEventListener("click",H),m&&m.addEventListener("keypress",function(e){e.key==="Enter"&&H()}),m&&m.addEventListener("input",G),p&&p.addEventListener("input",q(V,300)),w&&w.addEventListener("input",q(W,300)),p&&p.addEventListener("keypress",async function(e){if(e.key==="Enter"){e.preventDefault();const t=p.value.trim();if(t.length<2)return;try{const s=await fetch(`/api/messages/search/users?query=${encodeURIComponent(t)}`,{headers:{Accept:"application/json","X-CSRF-TOKEN":o}});if(!s.ok)throw new Error(`HTTP ${s.status}`);const n=await s.json();n.success&&Array.isArray(n.users)&&n.users.length>0&&(g(n.users[0].id),c.classList.add("hidden"))}catch{}}}),B&&i&&B.addEventListener("click",()=>i.classList.remove("hidden")),A&&i&&A.addEventListener("click",()=>i.classList.add("hidden")),I&&I.addEventListener("click",Y),i&&i.addEventListener("click",function(e){e.target===i&&i.classList.add("hidden")})}async function E(){try{const t=await(await fetch("/api/messages",{headers:{Accept:"application/json","X-CSRF-TOKEN":o}})).json();t.success&&(y=t.conversations,P())}catch(e){console.error("Error loading conversations:",e)}}function P(){if(h.innerHTML="",y.length===0){h.innerHTML=`
                <div class="p-4 text-center text-white/70">
                    <div class="w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center">
                        <span class="text-2xl">ðŸ’¬</span>
                    </div>
                    <p class="text-lg font-semibold text-white mb-2">No conversations yet</p>
                    <p class="text-sm">Start a new conversation!</p>
                </div>
            `;return}y.forEach(e=>{const t=D(e);h.appendChild(t)})}function D(e){const t=e.user,s=t.musician?.stage_name||t.business?.business_name||t.name,n=t.musician?"musician":t.business?"business":"member",r=t.musician?.profile_picture||t.business?.profile_picture||null,d=document.createElement("div");return d.className=`p-4 border-b border-white/20 cursor-pointer hover:bg-white/10 transition-colors rounded-xl m-2 ${a===t.id?"bg-white/20":""}`,d.setAttribute("data-user-id",t.id),d.innerHTML=`
            <div class="flex items-center space-x-3">
                <div class="relative">
                    ${r?`<img src="/storage/${r}" alt="${s}" class="w-12 h-12 rounded-full object-cover">`:`<div class="w-12 h-12 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center text-white font-bold">${s.charAt(0).toUpperCase()}</div>`}
                    <div class="online-status absolute bottom-0 right-0 w-3 h-3 bg-green-400 rounded-full border-2 border-white"></div>
                </div>
                <div class="flex-1 min-w-0">
                    <div class="flex items-center justify-between">
                        <h3 class="font-semibold text-white truncate">${s}</h3>
                        <span class="text-xs text-white/50">${O(e.last_message_at)}</span>
                    </div>
                    <p class="text-sm text-white/70 truncate">${n}</p>
                    ${e.unread_count>0?`<div class="flex items-center justify-between mt-1">
                            <span class="text-xs text-white/50">${e.message_count} messages</span>
                            <span class="bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs px-2 py-1 rounded-full">${e.unread_count}</span>
                        </div>`:`<span class="text-xs text-white/50">${e.message_count} messages</span>`}
                </div>
            </div>
        `,d.addEventListener("click",()=>g(t.id)),d}async function g(e){console.log("Opening chat with user:",e),a=e,C.classList.remove("hidden"),$.classList.remove("hidden"),k.classList.remove("hidden"),j.classList.add("hidden"),document.querySelectorAll("[data-user-id]").forEach(s=>{s.classList.remove("bg-blue-50","bg-white/20")});const t=document.querySelector(`[data-user-id="${e}"]`);t&&t.classList.add("bg-white/20"),await J(e),u.length>0&&await Q(e),E()}async function J(e){try{const s=await(await fetch(`/api/messages/${e}`,{headers:{Accept:"application/json","X-CSRF-TOKEN":o}})).json();s.success?(u=s.messages,b(),T(s.user),M()):(console.log("No existing conversation, ready for new messages"),await z(e))}catch(t){console.error("Error loading messages:",t)}}async function z(e){try{const s=await(await fetch(`/api/messages/${e}`,{headers:{Accept:"application/json","X-CSRF-TOKEN":o}})).json();s.success&&s.user?(T(s.user),u=[],b()):await U(e)}catch(t){console.error("Error loading user info:",t),await U(e)}}async function U(e){try{const s=await(await fetch(`/api/messages/search/users?query=${e}`,{headers:{Accept:"application/json","X-CSRF-TOKEN":o}})).json();if(s.success&&s.users&&s.users.length>0){const n=s.users.find(r=>r.id==e);n&&(T(n),u=[],b())}}catch(t){console.error("Error searching for user:",t)}}function b(){if(l.innerHTML="",u.length===0){l.innerHTML=`
                <div class="text-center py-8 text-white/70">
                    <div class="w-20 h-20 mx-auto mb-6 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center">
                        <span class="text-3xl">ðŸ’¬</span>
                    </div>
                    <p class="text-xl font-semibold text-white mb-2">Start a conversation</p>
                    <p class="text-sm">Send a message to begin chatting!</p>
                </div>
            `;return}u.forEach(e=>{const t=L(e);l.appendChild(t)})}function L(e){const t=e.sender_id===window.currentUserId,s=e.sender?.musician?.stage_name||e.sender?.business?.business_name||e.sender?.name||"Unknown",n=document.createElement("div");return n.className=`flex ${t?"justify-end":"justify-start"}`,n.setAttribute("data-message-id",e.id),n.innerHTML=`
            <div class="max-w-xs lg:max-w-md px-4 py-3 rounded-2xl ${t?"bg-gradient-to-r from-purple-500 to-pink-500 text-white":"bg-white/20 backdrop-blur-xl text-white border border-white/20"}">
                ${t?"":`<div class="text-xs text-white/70 mb-1">${s}</div>`}
                <p class="text-sm">${e.content}</p>
                <div class="text-xs ${t?"text-white/80":"text-white/50"} mt-1">
                    ${O(e.created_at)}
                    ${t&&e.is_read?" âœ“âœ“":t?" âœ“":""}
                </div>
            </div>
        `,n}function T(e){const t=e.musician?.stage_name||e.business?.business_name||e.name;e.musician||e.business;const s=e.musician?.profile_picture||e.business?.profile_picture||null;document.getElementById("chatUserName").textContent=t,document.getElementById("chatUserStatus").textContent="Online";const n=document.getElementById("chatUserAvatar");s?n.innerHTML=`<img src="/storage/${s}" alt="${t}" class="w-full h-full rounded-full object-cover">`:n.innerHTML=t.charAt(0).toUpperCase()}async function H(){const e=m.value.trim();if(!(!e||!a))try{const s=await(await fetch("/api/messages",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-TOKEN":o},body:JSON.stringify({receiver_id:a,content:e})})).json();if(s.success){m.value="";const n=L(s.message);l.appendChild(n),u.push(s.message),M(),window.socketManager&&window.socketManager.isConnected&&window.socketManager.emitMessage({receiver_id:a,content:e,id:s.message.id,created_at:s.message.created_at})}}catch(t){console.error("Error sending message:",t)}}function G(){a&&(window.socketManager&&window.socketManager.isConnected&&window.socketManager.startTyping(a),x&&clearTimeout(x),x=setTimeout(()=>{window.socketManager&&window.socketManager.isConnected&&window.socketManager.stopTyping(a)},1e3))}async function Q(e){try{await fetch(`/api/messages/${e}/read`,{method:"POST",headers:{Accept:"application/json","X-CSRF-TOKEN":o}})}catch(t){console.error("Error marking messages as read:",t)}}async function V(){const e=p.value.trim();if(e.length<2){c.classList.add("hidden"),c.innerHTML="";return}try{const t=await fetch(`/api/messages/search/users?query=${encodeURIComponent(e)}`,{headers:{Accept:"application/json","X-CSRF-TOKEN":o}});if(!t.ok)throw new Error(`HTTP ${t.status}`);const s=await t.json();s.success&&Array.isArray(s.users)?(R(s.users,c,!1),c.classList.remove("hidden")):(c.innerHTML='<div class="p-4 text-gray-500">No users found.</div>',c.classList.remove("hidden"))}catch{c.innerHTML='<div class="p-4 text-red-500">Error searching users.</div>',c.classList.remove("hidden")}}async function W(){const e=w.value.trim();if(e.length<2){v.classList.add("hidden");return}try{const s=await(await fetch(`/api/messages/search/users?query=${encodeURIComponent(e)}`,{headers:{Accept:"application/json","X-CSRF-TOKEN":o}})).json();s.success&&(R(s.users,v,!0),v.classList.remove("hidden"))}catch(t){console.error("Error searching users:",t)}}function R(e,t,s=!1){if(t.innerHTML="",e.length===0){t.innerHTML='<div class="p-4 text-gray-500">No users found.</div>';return}e.forEach(n=>{const r=n.musician?.stage_name||n.business?.business_name||n.name,d=n.musician?"musician":n.business?"business":"member",F=n.musician?.profile_picture||n.business?.profile_picture||null,f=document.createElement("div");f.className="flex items-center gap-3 p-3 cursor-pointer hover:bg-gray-100 rounded-xl transition-colors",f.innerHTML=`
                <div class="w-10 h-10 rounded-full overflow-hidden bg-gradient-to-r from-purple-400 to-pink-400 flex items-center justify-center text-white font-bold">
                    ${F?`<img src="/storage/${F}" alt="${r}" class="w-full h-full object-cover">`:r.charAt(0).toUpperCase()}
                </div>
                <div class="flex-1 min-w-0">
                    <div class="font-semibold text-gray-800 truncate">${r}</div>
                    <div class="text-xs text-gray-500">${d}</div>
                </div>
            `,f.addEventListener("click",()=>{t.classList.add("hidden"),s?(g(n.id),typeof i<"u"&&i.classList.add("hidden")):g(n.id)}),t.appendChild(f)})}function Y(){a=null,C.classList.add("hidden"),$.classList.add("hidden"),k.classList.add("hidden"),j.classList.remove("hidden"),document.querySelectorAll("[data-user-id]").forEach(e=>{e.classList.remove("bg-blue-50")})}function M(){l&&(l.scrollTop=l.scrollHeight)}function O(e){const t=new Date(e),n=new Date-t;return n<6e4?"Just now":n<36e5?Math.floor(n/6e4)+"m ago":n<864e5?Math.floor(n/36e5)+"h ago":t.toLocaleDateString()}function q(e,t){let s;return function(...r){const d=()=>{clearTimeout(s),e(...r)};clearTimeout(s),s=setTimeout(d,t)}}window.addMessageToChat=function(e,t){if(a&&t.id===a){const s=L({...e,sender:t});l.appendChild(s),u.push({...e,sender:t}),M()}},window.openChat=g,window.showTypingIndicator=function(e){a&&e.sender_id===a&&(e.isTyping?(K.textContent=`${e.sender_name} is typing...`,_.classList.remove("hidden")):_.classList.add("hidden"))},window.updateMessageStatus=function(e,t){const s=document.querySelector(`[data-message-id="${e}"]`);if(s){const n=s.querySelector(".text-xs");n&&(n.textContent=n.textContent.replace(/âœ“+/,t==="read"?"âœ“âœ“":"âœ“"))}},window.updateUnreadMessageCount=function(){E()}});
